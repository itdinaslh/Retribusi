// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Retribusi.Data;

#nullable disable

namespace Retribusi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Retribusi.Entities.Bidang", b =>
                {
                    b.Property<Guid>("BidangID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("KepalaBidang")
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)");

                    b.Property<string>("NamaBidang")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("BidangID");

                    b.ToTable("Bidang");
                });

            modelBuilder.Entity("Retribusi.Entities.ClientWR", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientNIK")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("ClientNPWP")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("ClientPhone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("JenisID")
                        .HasColumnType("integer");

                    b.Property<string>("KecamatanID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("KelurahanID")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ObjectName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("ObjectPhone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<Guid>("PegawaiId")
                        .HasColumnType("uuid");

                    b.Property<bool>("StatusAktif")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ClientId");

                    b.HasIndex("JenisID");

                    b.HasIndex("KecamatanID");

                    b.HasIndex("KelurahanID");

                    b.HasIndex("PegawaiId");

                    b.ToTable("ClientWR");
                });

            modelBuilder.Entity("Retribusi.Entities.FungsiKendaraan", b =>
                {
                    b.Property<int>("FungsiKendaraanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FungsiKendaraanID"));

                    b.Property<string>("NamaFungsi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("FungsiKendaraanID");

                    b.ToTable("FungsiKendaraan");
                });

            modelBuilder.Entity("Retribusi.Entities.JenisKendaraan", b =>
                {
                    b.Property<int>("JenisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JenisID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("KodeJenis")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("NamaJenis")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("JenisID");

                    b.ToTable("JenisKendaraan");
                });

            modelBuilder.Entity("Retribusi.Entities.JenisTps", b =>
                {
                    b.Property<int>("JenisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JenisID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NamaJenis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("JenisID");

                    b.ToTable("JenisTps");
                });

            modelBuilder.Entity("Retribusi.Entities.JenisWR", b =>
                {
                    b.Property<int>("JenisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JenisID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NamaJenis")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)");

                    b.Property<string>("NoRekening")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("JenisID");

                    b.ToTable("JenisWR");
                });

            modelBuilder.Entity("Retribusi.Entities.Kabupaten", b =>
                {
                    b.Property<string>("KabupatenID")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("IsKota")
                        .HasColumnType("boolean");

                    b.Property<string>("Latitude")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("NamaKabupaten")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("ProvinsiID")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.HasKey("KabupatenID");

                    b.HasIndex("ProvinsiID");

                    b.ToTable("Kabupaten");
                });

            modelBuilder.Entity("Retribusi.Entities.Kecamatan", b =>
                {
                    b.Property<string>("KecamatanID")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("KabupatenID")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Latitude")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("NamaKecamatan")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("KecamatanID");

                    b.HasIndex("KabupatenID");

                    b.ToTable("Kecamatan");
                });

            modelBuilder.Entity("Retribusi.Entities.Kelurahan", b =>
                {
                    b.Property<string>("KelurahanID")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("KecamatanID")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Latitude")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("NamaKelurahan")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("KelurahanID");

                    b.HasIndex("KecamatanID");

                    b.ToTable("Kelurahan");
                });

            modelBuilder.Entity("Retribusi.Entities.Kendaraan", b =>
                {
                    b.Property<int>("KendaraanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KendaraanId"));

                    b.Property<Guid?>("BidangAsalId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BidangPenugasanId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short?>("Fungsi")
                        .HasColumnType("smallint");

                    b.Property<int?>("FungsiKendaraanID")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("JenisKendaraanId")
                        .HasColumnType("integer");

                    b.Property<string>("KabupatenAsalId")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("KabupatenPenugasanId")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("KecamatanAsalId")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("KecamatanPenugasanId")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<double?>("KonsumsiBBM")
                        .HasColumnType("double precision");

                    b.Property<int?>("MerkKendaraanId")
                        .HasColumnType("integer");

                    b.Property<string>("NoPintu")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("NoPolisi")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("NoRangka")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TahunPengadaan")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<int?>("TipeKendaraanId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("KendaraanId");

                    b.HasIndex("BidangAsalId");

                    b.HasIndex("BidangPenugasanId");

                    b.HasIndex("FungsiKendaraanID");

                    b.HasIndex("JenisKendaraanId");

                    b.HasIndex("KabupatenAsalId");

                    b.HasIndex("KabupatenPenugasanId");

                    b.HasIndex("KecamatanAsalId");

                    b.HasIndex("KecamatanPenugasanId");

                    b.HasIndex("MerkKendaraanId");

                    b.HasIndex("TipeKendaraanId");

                    b.ToTable("Kendaraan");
                });

            modelBuilder.Entity("Retribusi.Entities.MerkKendaraan", b =>
                {
                    b.Property<int>("MerkKendaraanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MerkKendaraanId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("KodeMerk")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("NamaMerk")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MerkKendaraanId");

                    b.ToTable("MerkKendaraan");
                });

            modelBuilder.Entity("Retribusi.Entities.Pegawai", b =>
                {
                    b.Property<Guid>("PegawaiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alamat")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("BidangId")
                        .HasColumnType("uuid");

                    b.Property<string>("Catatan")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("KabupatenID")
                        .HasColumnType("character varying(10)");

                    b.Property<string>("KecamatanID")
                        .HasColumnType("character varying(10)");

                    b.Property<string>("KelurahanID")
                        .HasColumnType("character varying(15)");

                    b.Property<string>("NIK")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("NIP")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NamaPegawai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NoHP")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<bool>("StatusAktif")
                        .HasColumnType("boolean");

                    b.Property<short?>("TahunMasuk")
                        .HasColumnType("smallint");

                    b.Property<DateOnly>("TglLahir")
                        .HasColumnType("date");

                    b.Property<int>("TipePegawaiId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PegawaiId");

                    b.HasIndex("BidangId");

                    b.HasIndex("KabupatenID");

                    b.HasIndex("KecamatanID");

                    b.HasIndex("KelurahanID");

                    b.HasIndex("RoleId");

                    b.HasIndex("TipePegawaiId");

                    b.ToTable("Pegawai");
                });

            modelBuilder.Entity("Retribusi.Entities.Penugasan", b =>
                {
                    b.Property<int>("PenugasanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PenugasanId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("NamaPenugasan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("PenugasanId");

                    b.ToTable("Penugasan");
                });

            modelBuilder.Entity("Retribusi.Entities.Provinsi", b =>
                {
                    b.Property<string>("ProvinsiID")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("HcKey")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("KodeNegara")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Latitude")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("NamaProvinsi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ProvinsiID");

                    b.ToTable("Provinsi");
                });

            modelBuilder.Entity("Retribusi.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Retribusi.Entities.StatusLahan", b =>
                {
                    b.Property<int>("StatusLahanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StatusLahanId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("NamaStatus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("StatusLahanId");

                    b.ToTable("StatusLahan");
                });

            modelBuilder.Entity("Retribusi.Entities.StatusWR", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("StatusId");

                    b.ToTable("StatusWR");
                });

            modelBuilder.Entity("Retribusi.Entities.TipeKendaraan", b =>
                {
                    b.Property<int>("TipeKendaraanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TipeKendaraanId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("MerkKendaraanId")
                        .HasColumnType("integer");

                    b.Property<string>("NamaTipe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TipeKendaraanId");

                    b.HasIndex("MerkKendaraanId");

                    b.ToTable("TipeKendaraan");
                });

            modelBuilder.Entity("Retribusi.Entities.TipePegawai", b =>
                {
                    b.Property<int>("TipePegawaiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TipePegawaiId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("NamaTipe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("TipePegawaiId");

                    b.ToTable("TipePegawai");
                });

            modelBuilder.Entity("Retribusi.Entities.Tps", b =>
                {
                    b.Property<Guid>("TpsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("JenisTpsId")
                        .HasColumnType("integer");

                    b.Property<string>("KelurahanID")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double?>("LuasLahan")
                        .HasColumnType("double precision");

                    b.Property<string>("NamaTps")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("StatusLahanId")
                        .HasColumnType("integer");

                    b.Property<string>("TpsCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("Volume")
                        .HasColumnType("double precision");

                    b.HasKey("TpsId");

                    b.HasIndex("JenisTpsId");

                    b.HasIndex("KelurahanID");

                    b.HasIndex("StatusLahanId");

                    b.ToTable("Tps");
                });

            modelBuilder.Entity("Retribusi.Entities.ClientWR", b =>
                {
                    b.HasOne("Retribusi.Entities.JenisWR", "JenisWR")
                        .WithMany("ClientWRs")
                        .HasForeignKey("JenisID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Retribusi.Entities.Kecamatan", "Kecamatan")
                        .WithMany("ClientWRs")
                        .HasForeignKey("KecamatanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Retribusi.Entities.Kelurahan", "Kelurahan")
                        .WithMany("ClientWRs")
                        .HasForeignKey("KelurahanID");

                    b.HasOne("Retribusi.Entities.Pegawai", "Pegawai")
                        .WithMany("ClientWRs")
                        .HasForeignKey("PegawaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JenisWR");

                    b.Navigation("Kecamatan");

                    b.Navigation("Kelurahan");

                    b.Navigation("Pegawai");
                });

            modelBuilder.Entity("Retribusi.Entities.Kabupaten", b =>
                {
                    b.HasOne("Retribusi.Entities.Provinsi", "Provinsi")
                        .WithMany("Kabupatens")
                        .HasForeignKey("ProvinsiID");

                    b.Navigation("Provinsi");
                });

            modelBuilder.Entity("Retribusi.Entities.Kecamatan", b =>
                {
                    b.HasOne("Retribusi.Entities.Kabupaten", "Kabupaten")
                        .WithMany("Kecamatans")
                        .HasForeignKey("KabupatenID");

                    b.Navigation("Kabupaten");
                });

            modelBuilder.Entity("Retribusi.Entities.Kelurahan", b =>
                {
                    b.HasOne("Retribusi.Entities.Kecamatan", "Kecamatan")
                        .WithMany("Kelurahans")
                        .HasForeignKey("KecamatanID");

                    b.Navigation("Kecamatan");
                });

            modelBuilder.Entity("Retribusi.Entities.Kendaraan", b =>
                {
                    b.HasOne("Retribusi.Entities.Bidang", "BidangAsal")
                        .WithMany("KendaraanAsal")
                        .HasForeignKey("BidangAsalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Retribusi.Entities.Bidang", "BidangPenugasan")
                        .WithMany("KendaraanPenugasan")
                        .HasForeignKey("BidangPenugasanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Retribusi.Entities.FungsiKendaraan", "FungsiKendaraan")
                        .WithMany("Kendaraans")
                        .HasForeignKey("FungsiKendaraanID");

                    b.HasOne("Retribusi.Entities.JenisKendaraan", "JenisKendaraan")
                        .WithMany("Kendaraans")
                        .HasForeignKey("JenisKendaraanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Retribusi.Entities.Kabupaten", "KabupatenAsal")
                        .WithMany("KendaraanAsal")
                        .HasForeignKey("KabupatenAsalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Retribusi.Entities.Kabupaten", "KabupatenPenugasan")
                        .WithMany("KendaraanPenugasan")
                        .HasForeignKey("KabupatenPenugasanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Retribusi.Entities.Kecamatan", "KecamatanAsal")
                        .WithMany("KendaraanAsal")
                        .HasForeignKey("KecamatanAsalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Retribusi.Entities.Kecamatan", "KecamatanPenugasan")
                        .WithMany("KendaraanPenugasan")
                        .HasForeignKey("KecamatanPenugasanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Retribusi.Entities.MerkKendaraan", "MerkKendaraan")
                        .WithMany("Kendaraans")
                        .HasForeignKey("MerkKendaraanId");

                    b.HasOne("Retribusi.Entities.TipeKendaraan", "TipeKendaraan")
                        .WithMany("Kendaraans")
                        .HasForeignKey("TipeKendaraanId");

                    b.Navigation("BidangAsal");

                    b.Navigation("BidangPenugasan");

                    b.Navigation("FungsiKendaraan");

                    b.Navigation("JenisKendaraan");

                    b.Navigation("KabupatenAsal");

                    b.Navigation("KabupatenPenugasan");

                    b.Navigation("KecamatanAsal");

                    b.Navigation("KecamatanPenugasan");

                    b.Navigation("MerkKendaraan");

                    b.Navigation("TipeKendaraan");
                });

            modelBuilder.Entity("Retribusi.Entities.Pegawai", b =>
                {
                    b.HasOne("Retribusi.Entities.Bidang", "Bidang")
                        .WithMany("Pegawais")
                        .HasForeignKey("BidangId");

                    b.HasOne("Retribusi.Entities.Kabupaten", null)
                        .WithMany("Pegawais")
                        .HasForeignKey("KabupatenID");

                    b.HasOne("Retribusi.Entities.Kecamatan", "Kecamatan")
                        .WithMany("Pegawais")
                        .HasForeignKey("KecamatanID");

                    b.HasOne("Retribusi.Entities.Kelurahan", "Kelurahan")
                        .WithMany("Pegawais")
                        .HasForeignKey("KelurahanID");

                    b.HasOne("Retribusi.Entities.Role", "Role")
                        .WithMany("Pegawais")
                        .HasForeignKey("RoleId");

                    b.HasOne("Retribusi.Entities.TipePegawai", "TipePegawai")
                        .WithMany("Pegawais")
                        .HasForeignKey("TipePegawaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bidang");

                    b.Navigation("Kecamatan");

                    b.Navigation("Kelurahan");

                    b.Navigation("Role");

                    b.Navigation("TipePegawai");
                });

            modelBuilder.Entity("Retribusi.Entities.TipeKendaraan", b =>
                {
                    b.HasOne("Retribusi.Entities.MerkKendaraan", "MerkKendaraan")
                        .WithMany("TipeKendaraans")
                        .HasForeignKey("MerkKendaraanId");

                    b.Navigation("MerkKendaraan");
                });

            modelBuilder.Entity("Retribusi.Entities.Tps", b =>
                {
                    b.HasOne("Retribusi.Entities.JenisTps", "JenisTps")
                        .WithMany("Tps")
                        .HasForeignKey("JenisTpsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Retribusi.Entities.Kelurahan", "Kelurahan")
                        .WithMany("Tps")
                        .HasForeignKey("KelurahanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Retribusi.Entities.StatusLahan", "StatusLahan")
                        .WithMany()
                        .HasForeignKey("StatusLahanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JenisTps");

                    b.Navigation("Kelurahan");

                    b.Navigation("StatusLahan");
                });

            modelBuilder.Entity("Retribusi.Entities.Bidang", b =>
                {
                    b.Navigation("KendaraanAsal");

                    b.Navigation("KendaraanPenugasan");

                    b.Navigation("Pegawais");
                });

            modelBuilder.Entity("Retribusi.Entities.FungsiKendaraan", b =>
                {
                    b.Navigation("Kendaraans");
                });

            modelBuilder.Entity("Retribusi.Entities.JenisKendaraan", b =>
                {
                    b.Navigation("Kendaraans");
                });

            modelBuilder.Entity("Retribusi.Entities.JenisTps", b =>
                {
                    b.Navigation("Tps");
                });

            modelBuilder.Entity("Retribusi.Entities.JenisWR", b =>
                {
                    b.Navigation("ClientWRs");
                });

            modelBuilder.Entity("Retribusi.Entities.Kabupaten", b =>
                {
                    b.Navigation("Kecamatans");

                    b.Navigation("KendaraanAsal");

                    b.Navigation("KendaraanPenugasan");

                    b.Navigation("Pegawais");
                });

            modelBuilder.Entity("Retribusi.Entities.Kecamatan", b =>
                {
                    b.Navigation("ClientWRs");

                    b.Navigation("Kelurahans");

                    b.Navigation("KendaraanAsal");

                    b.Navigation("KendaraanPenugasan");

                    b.Navigation("Pegawais");
                });

            modelBuilder.Entity("Retribusi.Entities.Kelurahan", b =>
                {
                    b.Navigation("ClientWRs");

                    b.Navigation("Pegawais");

                    b.Navigation("Tps");
                });

            modelBuilder.Entity("Retribusi.Entities.MerkKendaraan", b =>
                {
                    b.Navigation("Kendaraans");

                    b.Navigation("TipeKendaraans");
                });

            modelBuilder.Entity("Retribusi.Entities.Pegawai", b =>
                {
                    b.Navigation("ClientWRs");
                });

            modelBuilder.Entity("Retribusi.Entities.Provinsi", b =>
                {
                    b.Navigation("Kabupatens");
                });

            modelBuilder.Entity("Retribusi.Entities.Role", b =>
                {
                    b.Navigation("Pegawais");
                });

            modelBuilder.Entity("Retribusi.Entities.TipeKendaraan", b =>
                {
                    b.Navigation("Kendaraans");
                });

            modelBuilder.Entity("Retribusi.Entities.TipePegawai", b =>
                {
                    b.Navigation("Pegawais");
                });
#pragma warning restore 612, 618
        }
    }
}
